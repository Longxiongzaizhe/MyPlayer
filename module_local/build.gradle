/*1.需要根据模式修改类型*/
if (isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion build_version.target_sdk
    buildToolsVersion build_version.build_tools


    defaultConfig {
        minSdkVersion build_version.min_sdk
        targetSdkVersion build_version.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

    }

    /*3.设置模块化时编译模块等;*/
    sourceSets.main {
        if (isModule.toBoolean()) {
            //模块化时;
            manifest.srcFile 'src/moduledebug/AndroidManifest.xml'
            java.srcDirs = [
                    'src/moduledebug/java',
                    'src/main/java'
            ]
            res.srcDirs = [
                    'src/moduledebug/res',
                    'src/main/res'
            ]
            //assets.srcDirs = [] ;
        } else {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java {
                exclude 'src/moduledebug/java/**'  // 不想包含文件的路径
                exclude '**/package-info.java'
            }
            res {
                exclude 'src/moduledebug/res/**' // 不想包含的资源文件路径
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

}

// 2、kotlin 配置ARouter
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(':module_main')
    // ARouter
    /* 每个module都需要加入*/
    api deps.arouter_api
    kapt deps.arouter_compiler

}
