apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion build_version.target_sdk
    defaultConfig {
        applicationId "com.wj.myplayer"
        minSdkVersion build_version.min_sdk
        targetSdkVersion build_version.target_sdk
        versionCode build_version.versionCode
        versionName build_version.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"


    }

    //自定义apk名字
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // apk_渠道名-版本号-版本名称-编译时间.apk
//                def fileName = "Gwadar Pro-${variant.buildType.name}-${defaultConfig.versionCode}-v${defaultConfig.versionName}-${buildTime()}.apk"
                //apk_地区名-版本号-版本名称-编译时间.apk
                def fileName = "MyPlayer-${variant.buildType.name}-${defaultConfig.versionCode}-V${defaultConfig.versionName}__${buildTime()}.apk"
                outputFileName = fileName
            }
        }
    }


    buildTypes {



        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            manifestPlaceholders = [
//                    //此方式可直接在 manifest 中通过 ${icon} 进行占位引用； 或者在main同级中创建不同渠道后创建 res 资源文件
//                    icon               : "@drawable/logo",
//            ]
//            //
//            buildConfigField 'String', 'SERVER_URL', '"http://seven.xy-mind.com:18006/"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
    generateStubs = true
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api project(':module_main')

    kapt deps.arouter_compiler

    if(!isModule.toBoolean()){
        api project(':testmodule')
        api project(':module_local')
        api project(':module_net')
    }
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}

repositories {
    mavenCentral()
}


static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd--HH_mm')
    return formattedDate
}


